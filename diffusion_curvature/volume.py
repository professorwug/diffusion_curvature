# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/Volume Estimation.ipynb.

# %% auto 0
__all__ = ['volume_via_heat_at_scales', 'actual_euclidean_volumes_at_radii']

# %% ../nbs/Volume Estimation.ipynb 6
import numpy as np
from .utils import kronecker_delta
from .heatkernel import expm_multiply, heat_diffusion_on_signal
def volume_via_heat_at_scales(
    G, # a pygsp graph 
    i, # index of point to grow ball from
    ts, # list of times (or single time). 
):
    """Returns a list of volumes of the t-step balls constructed at point i, for each t in ts."""
    x = kronecker_delta(G.L.shape[0],i)
    diffused_at_scales = heat_diffusion_on_signal(G,x, ts) # each signal is a row
    diffused_at_scales = np.array(diffused_at_scales)
    volumes = 1/diffused_at_scales[:,i] # the ith column has the self affinities
    return volumes

# %% ../nbs/Volume Estimation.ipynb 11
from scipy.special import gamma
def actual_euclidean_volumes_at_radii(
        dim,
        radii
):
    vols = []
    for r in radii:
        v = np.pi**(dim/2)/(gamma(dim/2+1))*r**dim
        vols.append(v)
    return np.array(vols)
