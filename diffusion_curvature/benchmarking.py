# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/3 Benchmarking.ipynb.

# %% auto 0
__all__ = ['create_battery', 'main']

# %% ../nbs/3 Benchmarking.ipynb 2
from tqdm.auto import trange, tqdm
from .random_surfaces import samples_from_random_surface
from functools import partial
def create_battery(
        intrinsic_dims = [3,4,5,6],
        codimensions = [1,2],
        num_manifolds_per_dim = 10,
        noise_level=0
):
    CC = {}
    CC['dims'] = intrinsic_dims
    for d in tqdm(intrinsic_dims):
        n_samples = 80*2**d # TODO: Rough heuristic
        CC[d] = {}
        CC[d]['codims'] = codimensions
        for c in codimensions:
            CC[d][c] = {}
            CC[d][c]["Xs"] = []
            CC[d][c]["k"] = []
            N = d+c
            for i in trange(num_manifolds_per_dim):
                X, k = samples_from_random_surface(n_samples, d, N, degree=2, noise_level=noise_level, verbose=True)
                # Turns out doing it in parallel messes with the random number generator
                # specified_sampler = partial(samples_from_random_surface, n_samples, d, N, degree=2, noise_level=noise_level)
                # results = perform_trials()
                CC[d][c]["Xs"].append(X)
                CC[d][c]["k"].append(k)
    return CC

# %% ../nbs/3 Benchmarking.ipynb 7
import os
from fastcore.all import *
import json

@call_parse
def main(
        datafile:str="/home/piriac/data/Curvature_Colosseum.json", # path to the sampled toy manifolds
        outfile:str="/home/piriac/data/computed_curvatures.json", # path to save the sampled toy manifolds
        force:bool=False, # force to resample the toy manifolds

):
    # First: create the dataset, or load it if it exists
    # If yes and force=True, create it
    if not os.path.exists(datafile) or force:
        CC = create_battery()
        # save CC to datafile
        with open(datafile, 'w') as f:
            json.dump(CC, f)
    else:
        # load CC from datafile
        with open(datafile, 'r') as f:
            CC = json.load(f)
    
    
